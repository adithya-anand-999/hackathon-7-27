{"ast":null,"code":"var _jsxFileName = \"/Users/ayeshamahmood/hackathon-7-27/find-events/src/context/Context.jsx\",\n  _s = $RefreshSig$();\nimport { createContext, useState } from \"react\";\nimport runChat from \"../Config/gemini\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport const Context = /*#__PURE__*/createContext();\nconst ContextProvider = props => {\n  _s();\n  const [input, setInput] = useState(\"\");\n  const [recentPrompt, setRecentPrompt] = useState(\"\");\n  const [prevPrompts, setPrevPrompts] = useState([]);\n  const [showResult, setShowResult] = useState(false);\n  const [loading, setLoading] = useState(false);\n  const [resultData, setResultData] = useState(\"\");\n  const delayPara = (index, nextWord) => {\n    setTimeout(function () {\n      setResultData(prev => prev + nextWord);\n    }, 75 * index);\n  };\n  const newChat = () => {\n    setLoading(false);\n    setShowResult(false);\n  };\n  const onSent = async prompt => {\n    setResultData(\"\");\n    setLoading(true);\n    setShowResult(true);\n    let response;\n    if (prompt !== undefined) {\n      response = await runChat(prompt);\n      setRecentPrompt(prompt);\n    } else {\n      setPrevPrompts(prev => [...prev, input]);\n      setRecentPrompt(input);\n      response = await runChat(input);\n    }\n    let responseArray = response.split(\"**\");\n    let newResponse = \"\";\n    for (let i = 0; i < responseArray.length; i++) {\n      if (i === 0 || i % 2 !== 1) {\n        newResponse += responseArray[i];\n      } else {\n        newResponse += \"<b>\" + responseArray[i] + \"</b>\";\n      }\n    }\n    let newResponse2 = newResponse.split(\"*\").join(\"</br>\");\n    let newResponseArray = newResponse2.split(\" \");\n    for (let i = 0; i < newResponseArray.length; i++) {\n      const nextWord = newResponseArray[i];\n      delayPara(i, nextWord + \" \");\n    }\n    setLoading(false);\n    setInput(\"\");\n  };\n  const contextValue = {\n    prevPrompts,\n    setPrevPrompts,\n    onSent,\n    setRecentPrompt,\n    recentPrompt,\n    showResult,\n    loading,\n    resultData,\n    input,\n    setInput,\n    newChat\n  };\n  return /*#__PURE__*/_jsxDEV(Context.Provider, {\n    value: contextValue,\n    children: props.children\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 73,\n    columnNumber: 9\n  }, this);\n};\n_s(ContextProvider, \"T9amFa3heZeqmqAMPubYcTbbeSk=\");\n_c = ContextProvider;\nexport default ContextProvider;\nvar _c;\n$RefreshReg$(_c, \"ContextProvider\");","map":{"version":3,"names":["createContext","useState","runChat","jsxDEV","_jsxDEV","Context","ContextProvider","props","_s","input","setInput","recentPrompt","setRecentPrompt","prevPrompts","setPrevPrompts","showResult","setShowResult","loading","setLoading","resultData","setResultData","delayPara","index","nextWord","setTimeout","prev","newChat","onSent","prompt","response","undefined","responseArray","split","newResponse","i","length","newResponse2","join","newResponseArray","contextValue","Provider","value","children","fileName","_jsxFileName","lineNumber","columnNumber","_c","$RefreshReg$"],"sources":["/Users/ayeshamahmood/hackathon-7-27/find-events/src/context/Context.jsx"],"sourcesContent":["import { createContext, useState } from \"react\";\nimport runChat from \"../Config/gemini\";\n\nexport const Context = createContext();\n\nconst ContextProvider = (props) => {\n\n    const [input, setInput] = useState(\"\");\n    const [recentPrompt, setRecentPrompt] = useState(\"\");\n    const [prevPrompts, setPrevPrompts] = useState([]);\n    const [showResult, setShowResult] = useState(false);\n    const [loading, setLoading] = useState(false);\n    const [resultData, setResultData] = useState(\"\");\n\n    const delayPara = (index, nextWord) =>{\n       setTimeout(function () {\n        setResultData(prev=>prev+nextWord)\n       }, 75*index)\n    }\n\n    const newChat = () => {\n        setLoading(false)\n        setShowResult(false)\n    }\n\n    const onSent = async (prompt) => {\n        setResultData(\"\")\n        setLoading(true)\n        setShowResult(true)\n        let response;\n        if(prompt !== undefined){\n            response = await runChat(prompt);\n            setRecentPrompt(prompt)\n        }else{\n            setPrevPrompts(prev=>[...prev, input])\n            setRecentPrompt(input)\n            response = await runChat(input)\n        }\n        let responseArray = response.split(\"**\");\n        let newResponse=\"\";\n        for(let i = 0; i < responseArray.length; i++){\n            if(i === 0 || i % 2 !== 1){\n                newResponse += responseArray[i];\n            }else{\n                newResponse += \"<b>\"+responseArray[i]+\"</b>\"\n            }\n        }\n        let newResponse2 = newResponse.split(\"*\").join(\"</br>\")\n        let newResponseArray = newResponse2.split(\" \")\n        for(let i = 0; i < newResponseArray.length; i++){\n            const nextWord = newResponseArray[i];\n            delayPara(i, nextWord+\" \")\n        }\n        setLoading(false)\n        setInput(\"\")\n    }\n\n    const contextValue = {\n        prevPrompts,\n        setPrevPrompts,\n        onSent,\n        setRecentPrompt,\n        recentPrompt,\n        showResult,\n        loading,\n        resultData,\n        input,\n        setInput,\n        newChat\n    }\n\n    return (\n        <Context.Provider value={contextValue}>\n            {props.children}\n        </Context.Provider>\n    )\n}\n\nexport default ContextProvider"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}